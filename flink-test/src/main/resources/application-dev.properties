# 数据源配置:off
flink.datasource.driverClassName=com.mysql.cj.jdbc.Driver
flink.datasource.url=jdbc:mysql://192.168.0.108:4000/agriculture_big_data?useSSL=false&autoReconnect=true&rewriteBatchedStatements=true&useServerPrepStmts=true&allowMultiQueries=true&useConfigs=maxPerformance
flink.datasource.username=root
flink.datasource.password=
flink.datasource.className=org.apache.commons.dbcp2.BasicDataSource
flink.datasource.initialSize=10
flink.datasource.maxTotal=50
flink.datasource.minIdle=2
# 数据源配置:on

# kafka 消费者配置:off
flink.kafka.consumer.bootstrapServers=192.168.0.103:9092
flink.kafka.consumer.groupId=group0
flink.kafka.consumer.keyDeserializer=org.apache.kafka.common.serialization.StringDeserializer
flink.kafka.consumer.valueDeserializer=org.apache.kafka.common.serialization.StringDeserializer
flink.kafka.consumer.autoOffsetReset=latest
## 等价于 flink.partition-discovery.interval-millis 参数，用来开启 topic 分区自动感知
flink.kafka.consumer.automaticPartition=10000
flink.kafka.consumer.topic=TopicName-[0-9]
# kafka 消费者配置:on

# kafka 生产者配置:off
flink.kafka.producer.bootstrapServers=192.168.0.103:9092
flink.kafka.producer.keySerializer=org.apache.kafka.common.serialization.StringSerializer
flink.kafka.producer.valueSerializer=org.apache.kafka.common.serialization.StringSerializer
flink.kafka.producer.topic=TopicName-1
# kafka 生产者配置:on

# kafka 生产者配置:off
flink.kafka.producer2.bootstrapServers=192.168.0.103:9092
flink.kafka.producer2.keySerializer=org.apache.kafka.common.serialization.ByteArraySerializer
flink.kafka.producer2.valueSerializer=org.apache.kafka.common.serialization.ByteArraySerializer
flink.kafka.producer2.topic=TopicName-2
# kafka 生产者配置:on







